"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = (function (_React$Component) {
  _inherits(Actions, _React$Component);

  function Actions() {
    _classCallCheck(this, Actions);

    _get(Object.getPrototypeOf(Actions.prototype), "constructor", this).apply(this, arguments);
  }

  _createClass(Actions, [{
    key: "render",
    value: function render() {
      return React.createElement(
        "div",
        { className: "mdl-grid" },
        this.props.items.map(function (item) {
          return React.createElement(
            "div",
            { className: "mdl-cell mdl-cell--4-col" },
            React.createElement(Action, { actionTitle: item.actionTitle, actionDescription: item.actionDescription, customFunction: item.customFunction })
          );
        })
      );
    }
  }]);

  return Actions;
})(React.Component);

generateConvertFunction = function (object) {
  var originalResource = object["originalResource"];
  var newResource = object["newResource"];

  return function () {
    window[originalResource] -= object["oldResourceCost"];
    window[newResource] += object["newResourceGain"];
  };
};

actionArray = [{
  actionTitle: "Hire Developer", actionDescription: "If you do not have the technical talents, you can always engage in a little 'staff augmentation'. Convert 10ðŸ’° to 8ðŸ¤“.", customFunction: generateConvertFunction({ originalResource: "wealth", newResource: "power", oldResourceCost: 10, newResourceGain: 8 })
}, {
  actionTitle: "Hire Copywriter", actionDescription: "Copywriters write valuable content that bolsters your reputation as a Thought Leader. Convert 10ðŸ’° to 8ðŸ¤”.", customFunction: generateConvertFunction({ originalResource: "wealth", newResource: "influence", oldResourceCost: 10, newResourceGain: 8 })
}, {
  actionTitle: "Perform Consulting Work", actionDescription: "Do the necessary grunt work for the mom-and-pop multinationals. Convert 10ðŸ¤“ to 8ðŸ’°.", customFunction: generateConvertFunction({ originalResource: "power", newResource: "wealth", oldResourceCost: 10, newResourceGain: 8 })
}, {
  actionTitle: "Hold A Private Class", actionDescription: "Using your Thought Leadership to educate other people is rewarding for its own sake. But the money help. Convert 10ðŸ¤” to 8ðŸ’°.",
  customFunction: generateConvertFunction({ originalResource: "influence", newResource: "wealth", oldResourceCost: 10, newResourceGain: 8 })
}, {
  actionTitle: "Contribute to Open Source", actionDescription: "Writing code for other developers to use and abuse is a good way to boost your reputation. Convert 10ðŸ¤“ to 7ðŸ¤”.",
  customFunction: generateConvertFunction({ originalResource: "power", newResource: "influence", oldResourceCost: 10, newResourceGain: 7 })
}, {
  actionTitle: "Invent a Buzzword", actionDescription: "Buzzwords compress complicated ideologies into actionable frameworks that even developers can leverage. Convert 10ðŸ¤” to 7ðŸ¤“.",
  customFunction: generateConvertFunction({ originalResource: "influence", newResource: "power", oldResourceCost: 10, newResourceGain: 7 })
}];

ReactDOM.render(React.createElement(Actions, { items: actionArray }), document.getElementById('actions'));